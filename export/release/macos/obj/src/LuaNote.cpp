// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_cc9afe4755847ade
#define INCLUDED_cc9afe4755847ade
#include "linc_lua.h"
#endif
#ifndef INCLUDED_LuaClass
#include <LuaClass.h>
#endif
#ifndef INCLUDED_LuaNote
#include <LuaNote.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_Note
#include <Note.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroupIterator
#include <flixel/group/FlxTypedGroupIterator.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_159_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",159,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_168_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",168,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_172_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",172,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_192_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",192,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_202_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",202,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_208_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",208,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_217_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",217,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_226_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",226,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_235_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",235,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_244_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",244,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_248_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",248,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_256_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",256,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_260_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",260,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_268_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",268,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_280_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",280,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_288_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",288,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_292_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",292,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_300_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",300,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_309_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",309,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_313_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",313,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_321_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",321,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_325_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",325,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_333_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",333,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_337_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",337,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_346_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",346,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_150_new,"LuaNote","new",0x2e50bf9c,"LuaNote.new","LuaClass.hx",150,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_453_SetNumProperty,"LuaNote","SetNumProperty",0xe61b8a9d,"LuaNote.SetNumProperty","LuaClass.hx",453,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_467_Register,"LuaNote","Register",0x937bb9c7,"LuaNote.Register","LuaClass.hx",467,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_358_findNote,"LuaNote","findNote",0x84c87c0f,"LuaNote.findNote","LuaClass.hx",358,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_370_tweenPos,"LuaNote","tweenPos",0xfaf6d72d,"LuaNote.tweenPos","LuaClass.hx",370,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_398_tweenAngle,"LuaNote","tweenAngle",0x240815ac,"LuaNote.tweenAngle","LuaClass.hx",398,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_424_tweenAlpha,"LuaNote","tweenAlpha",0x22bc7937,"LuaNote.tweenAlpha","LuaClass.hx",424,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_449_boot,"LuaNote","boot",0x506fe976,"LuaNote.boot","LuaClass.hx",449,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_450_boot,"LuaNote","boot",0x506fe976,"LuaNote.boot","LuaClass.hx",450,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_3f466ccfc5bbbb03_451_boot,"LuaNote","boot",0x506fe976,"LuaNote.boot","LuaClass.hx",451,0xe0a4e33e)

void LuaNote_obj::__construct( ::Note connectedNote,int index){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_159_new)
HXLINE( 160)			lua_pushnumber(l,connectedNote->alpha);
HXLINE( 161)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_168_new)
HXLINE( 169)			lua_pushnumber(l,connectedNote->angle);
HXLINE( 170)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::Note,connectedNote) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_172_new)
HXLINE( 177)			if ((lua_type(l,3) != 3)) {
HXLINE( 178)				linc::lual::error(l,((HX_("invalid argument #3 (number expected, got ",25,84,c0,d9) + linc::lua::_typename(l,lua_type(l,3))) + HX_(")",29,00,00,00)));
HXLINE( 179)				return 0;
            			}
HXLINE( 182)			Float angle = lua_tonumber(l,3);
HXLINE( 183)			connectedNote->modAngle = angle;
HXLINE( 185)			::LuaClass_obj::DefaultSetter(l);
HXLINE( 186)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_192_new)
HXLINE( 193)			lua_pushnumber(l,connectedNote->strumTime);
HXLINE( 194)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_202_new)
HXLINE( 202)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_208_new)
HXLINE( 209)			lua_pushnumber(l,( (Float)(connectedNote->noteData) ));
HXLINE( 210)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_217_new)
HXLINE( 218)			{
HXLINE( 218)				int _hx_tmp;
HXDLIN( 218)				if ((connectedNote->mustPress == true)) {
HXLINE( 218)					_hx_tmp = 1;
            				}
            				else {
HXLINE( 218)					_hx_tmp = 0;
            				}
HXDLIN( 218)				lua_pushboolean(l,_hx_tmp);
            			}
HXLINE( 219)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_7, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_226_new)
HXLINE( 227)			lua_pushnumber(l,connectedNote->beat);
HXLINE( 228)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_8, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_235_new)
HXLINE( 236)			lua_pushnumber(l,( (Float)(connectedNote->rawNoteData) ));
HXLINE( 237)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_9, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_244_new)
HXLINE( 245)			{
HXLINE( 245)				int _hx_tmp;
HXDLIN( 245)				if ((connectedNote->isParent == true)) {
HXLINE( 245)					_hx_tmp = 1;
            				}
            				else {
HXLINE( 245)					_hx_tmp = 0;
            				}
HXDLIN( 245)				lua_pushboolean(l,_hx_tmp);
            			}
HXLINE( 246)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_10) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_248_new)
HXLINE( 249)			linc::lual::error(l,HX_("isParent is read-only.",d5,65,ce,bc));
HXLINE( 250)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_11, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_256_new)
HXLINE( 257)			lua_pushstring(l,(HX_("note_",2d,dc,ca,9f) + connectedNote->parent->luaID));
HXLINE( 258)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_12) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_260_new)
HXLINE( 261)			linc::lual::error(l,HX_("getParent is read-only.",81,68,af,71));
HXLINE( 262)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_13, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_268_new)
HXLINE( 269)			lua_newtable(l);
HXLINE( 271)			{
HXLINE( 271)				int _g = 0;
HXDLIN( 271)				int _g1 = connectedNote->children->length;
HXDLIN( 271)				while((_g < _g1)){
HXLINE( 271)					_g = (_g + 1);
HXDLIN( 271)					int i = (_g - 1);
HXLINE( 273)					 ::Note note = connectedNote->children->__get(i).StaticCast<  ::Note >();
HXLINE( 274)					lua_pushstring(l,(HX_("note_",2d,dc,ca,9f) + note->luaID));
HXLINE( 275)					lua_rawseti(l,-2,i);
            				}
            			}
HXLINE( 278)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_14) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_280_new)
HXLINE( 281)			linc::lual::error(l,HX_("getChildren is read-only.",d6,70,79,81));
HXLINE( 282)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_15, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_288_new)
HXLINE( 289)			lua_pushnumber(l,( (Float)(connectedNote->spotInLine) ));
HXLINE( 290)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_16) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_292_new)
HXLINE( 293)			linc::lual::error(l,HX_("spot in line is read-only.",d2,60,df,0d));
HXLINE( 294)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_17, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_300_new)
HXLINE( 301)			lua_pushnumber(l,connectedNote->x);
HXLINE( 302)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_18) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_309_new)
HXLINE( 310)			linc::lua::pushcfunction(l,::LuaNote_obj::tweenPosC);
HXLINE( 311)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_19) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_313_new)
HXLINE( 314)			linc::lual::error(l,HX_("tweenPos is read-only.",ca,97,f3,17));
HXLINE( 315)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_20) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_321_new)
HXLINE( 322)			linc::lua::pushcfunction(l,::LuaNote_obj::tweenAlphaC);
HXLINE( 323)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_21) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_325_new)
HXLINE( 326)			linc::lual::error(l,HX_("tweenAlpha is read-only.",54,de,e3,6d));
HXLINE( 327)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_22) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_333_new)
HXLINE( 334)			linc::lua::pushcfunction(l,::LuaNote_obj::tweenAngleC);
HXLINE( 335)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_23) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_337_new)
HXLINE( 338)			linc::lual::error(l,HX_("tweenAngle is read-only.",89,7d,c8,68));
HXLINE( 339)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_24, ::Note,connectedNote) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_346_new)
HXLINE( 347)			lua_pushnumber(l,connectedNote->y);
HXLINE( 348)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_150_new)
HXLINE( 151)		super::__construct();
HXLINE( 152)		this->className = (HX_("note_",2d,dc,ca,9f) + index);
HXLINE( 154)		this->note = connectedNote;
HXLINE( 156)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 156)		_g->set(HX_("alpha",5e,a7,96,21), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_0(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		_g->set(HX_("angle",d3,43,e2,22), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_1(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_2(connectedNote)))));
HXDLIN( 156)		_g->set(HX_("strumTime",f6,2d,21,f4), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_3(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_4()))));
HXDLIN( 156)		_g->set(HX_("data",2a,56,63,42), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_5(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		_g->set(HX_("mustPress",ba,d4,17,60), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_6(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		_g->set(HX_("beat",76,e1,13,41), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_7(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		_g->set(HX_("isSustain",d9,79,ef,fd), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_8(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		_g->set(HX_("isParent",b4,a0,e7,45), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_9(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_10()))));
HXDLIN( 156)		_g->set(HX_("getParent",60,8e,d4,69), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_11(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_12()))));
HXDLIN( 156)		_g->set(HX_("getChildren",f5,db,5d,96), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_13(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_14()))));
HXDLIN( 156)		_g->set(HX_("getSpotInline",31,af,f1,79), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_15(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),1)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_16()))));
HXDLIN( 156)		_g->set(HX_("x",78,00,00,00), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_17(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),connectedNote->x)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		_g->set(HX_("tweenPos",e9,7f,cc,11), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_18()))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),0)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_19()))));
HXDLIN( 156)		_g->set(HX_("tweenAlpha",f3,c8,da,d8), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_20()))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),0)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_21()))));
HXDLIN( 156)		_g->set(HX_("tweenAngle",68,65,26,da), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_22()))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),0)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_23()))));
HXDLIN( 156)		_g->set(HX_("y",79,00,00,00), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_24(connectedNote)))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),connectedNote->y)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN( 156)		this->properties = _g;
            	}

Dynamic LuaNote_obj::__CreateEmpty() { return new LuaNote_obj; }

void *LuaNote_obj::_hx_vtable = 0;

Dynamic LuaNote_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LuaNote_obj > _hx_result = new LuaNote_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool LuaNote_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0b187a06) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0b187a06;
	} else {
		return inClassId==(int)0x52dfe7a4;
	}
}

int LuaNote_obj::SetNumProperty( cpp::Reference<lua_State> l){
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_453_SetNumProperty)
HXLINE( 458)		if ((lua_type(l,3) != 3)) {
HXLINE( 459)			linc::lual::error(l,((HX_("invalid argument #3 (number expected, got ",25,84,c0,d9) + linc::lua::_typename(l,lua_type(l,3))) + HX_(")",29,00,00,00)));
HXLINE( 460)			return 0;
            		}
HXLINE( 462)		this->note->modifiedByLua = true;
HXLINE( 463)		 ::Note _hx_tmp = this->note;
HXDLIN( 463)		::String _hx_tmp1 = linc::lua::tostring(l,2);
HXDLIN( 463)		::Reflect_obj::setProperty(_hx_tmp,_hx_tmp1,lua_tonumber(l,3));
HXLINE( 464)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LuaNote_obj,SetNumProperty,return )

void LuaNote_obj::Register( cpp::Reference<lua_State> l){
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_467_Register)
HXLINE( 468)		::LuaNote_obj::state = l;
HXLINE( 469)		this->super::Register(l);
            	}


 cpp::Reference<lua_State> LuaNote_obj::state;

 ::Note LuaNote_obj::findNote(Float time,int data){
            	HX_GC_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_358_findNote)
HXLINE( 360)		{
HXLINE( 360)			 ::Dynamic filter = null();
HXDLIN( 360)			 ::flixel::group::FlxTypedGroupIterator i =  ::flixel::group::FlxTypedGroupIterator_obj::__alloc( HX_CTX ,::PlayState_obj::instance->notes->members,filter);
HXDLIN( 360)			while(i->hasNext()){
HXLINE( 360)				 ::Note i1 = i->next().StaticCast<  ::Note >();
HXLINE( 362)				bool _hx_tmp;
HXDLIN( 362)				if ((i1->strumTime == time)) {
HXLINE( 362)					_hx_tmp = (i1->noteData == data);
            				}
            				else {
HXLINE( 362)					_hx_tmp = false;
            				}
HXDLIN( 362)				if (_hx_tmp) {
HXLINE( 364)					return i1;
            				}
            			}
            		}
HXLINE( 367)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(LuaNote_obj,findNote,return )

int LuaNote_obj::tweenPos( lua_State* l){
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_370_tweenPos)
HXLINE( 375)		Float xp = luaL_checknumber(::LuaNote_obj::state,2);
HXLINE( 376)		Float yp = luaL_checknumber(::LuaNote_obj::state,3);
HXLINE( 377)		Float time = luaL_checknumber(::LuaNote_obj::state,4);
HXLINE( 379)		lua_getfield(::LuaNote_obj::state,1,HX_("strumTime",f6,2d,21,f4));
HXLINE( 380)		Float time1 = lua_tonumber(::LuaNote_obj::state,-1);
HXLINE( 381)		lua_getfield(::LuaNote_obj::state,1,HX_("data",2a,56,63,42));
HXLINE( 382)		Float data = lua_tonumber(::LuaNote_obj::state,-1);
HXLINE( 384)		 ::Note note = ::LuaNote_obj::findNote(time1,::Math_obj::floor(data));
HXLINE( 386)		if (::hx::IsNull( note )) {
HXLINE( 388)			linc::lual::error(::LuaNote_obj::state,((HX_("Failure to tween (couldn't find note ",e9,db,c6,6f) + time1) + HX_(")",29,00,00,00)));
HXLINE( 389)			return 0;
            		}
HXLINE( 393)		::flixel::tweens::FlxTween_obj::tween(note, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("x",78,00,00,00),xp)
            			->setFixed(1,HX_("y",79,00,00,00),yp)),time1,null());
HXLINE( 395)		return 0;
            	}


int LuaNote_obj::tweenAngle( lua_State* l){
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_398_tweenAngle)
HXLINE( 402)		Float nangle = luaL_checknumber(::LuaNote_obj::state,2);
HXLINE( 403)		Float time = luaL_checknumber(::LuaNote_obj::state,3);
HXLINE( 405)		lua_getfield(::LuaNote_obj::state,1,HX_("strumTime",f6,2d,21,f4));
HXLINE( 406)		Float time1 = lua_tonumber(::LuaNote_obj::state,-1);
HXLINE( 407)		lua_getfield(::LuaNote_obj::state,1,HX_("data",2a,56,63,42));
HXLINE( 408)		Float data = lua_tonumber(::LuaNote_obj::state,-1);
HXLINE( 410)		 ::Note note = ::LuaNote_obj::findNote(time1,::Math_obj::floor(data));
HXLINE( 412)		if (::hx::IsNull( note )) {
HXLINE( 414)			linc::lual::error(::LuaNote_obj::state,((HX_("Failure to tween (couldn't find note ",e9,db,c6,6f) + time1) + HX_(")",29,00,00,00)));
HXLINE( 415)			return 0;
            		}
HXLINE( 419)		::flixel::tweens::FlxTween_obj::tween(note, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("modAngle",b1,dd,08,14),nangle)),time1,null());
HXLINE( 421)		return 0;
            	}


int LuaNote_obj::tweenAlpha( lua_State* l){
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_424_tweenAlpha)
HXLINE( 428)		Float nalpha = luaL_checknumber(::LuaNote_obj::state,2);
HXLINE( 429)		Float time = luaL_checknumber(::LuaNote_obj::state,3);
HXLINE( 431)		lua_getfield(::LuaNote_obj::state,1,HX_("strumTime",f6,2d,21,f4));
HXLINE( 432)		Float time1 = lua_tonumber(::LuaNote_obj::state,-1);
HXLINE( 433)		lua_getfield(::LuaNote_obj::state,1,HX_("data",2a,56,63,42));
HXLINE( 434)		Float data = lua_tonumber(::LuaNote_obj::state,-1);
HXLINE( 436)		 ::Note note = ::LuaNote_obj::findNote(time1,::Math_obj::floor(data));
HXLINE( 438)		if (::hx::IsNull( note )) {
HXLINE( 440)			linc::lual::error(::LuaNote_obj::state,((HX_("Failure to tween (couldn't find note ",e9,db,c6,6f) + time1) + HX_(")",29,00,00,00)));
HXLINE( 441)			return 0;
            		}
HXLINE( 444)		::flixel::tweens::FlxTween_obj::tween(note, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),nalpha)),time1,null());
HXLINE( 446)		return 0;
            	}


::cpp::Function< int  ( lua_State*) > LuaNote_obj::tweenPosC;

::cpp::Function< int  ( lua_State*) > LuaNote_obj::tweenAngleC;

::cpp::Function< int  ( lua_State*) > LuaNote_obj::tweenAlphaC;


::hx::ObjectPtr< LuaNote_obj > LuaNote_obj::__new( ::Note connectedNote,int index) {
	::hx::ObjectPtr< LuaNote_obj > __this = new LuaNote_obj();
	__this->__construct(connectedNote,index);
	return __this;
}

::hx::ObjectPtr< LuaNote_obj > LuaNote_obj::__alloc(::hx::Ctx *_hx_ctx, ::Note connectedNote,int index) {
	LuaNote_obj *__this = (LuaNote_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LuaNote_obj), true, "LuaNote"));
	*(void **)__this = LuaNote_obj::_hx_vtable;
	__this->__construct(connectedNote,index);
	return __this;
}

LuaNote_obj::LuaNote_obj()
{
}

void LuaNote_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LuaNote);
	HX_MARK_MEMBER_NAME(note,"note");
	 ::LuaClass_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void LuaNote_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(note,"note");
	 ::LuaClass_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val LuaNote_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"note") ) { return ::hx::Val( note ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"Register") ) { return ::hx::Val( Register_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"SetNumProperty") ) { return ::hx::Val( SetNumProperty_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool LuaNote_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { outValue = ( state ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"findNote") ) { outValue = findNote_dyn(); return true; }
	}
	return false;
}

::hx::Val LuaNote_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"note") ) { note=inValue.Cast<  ::Note >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool LuaNote_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { state=ioValue.Cast<  cpp::Reference<lua_State> >(); return true; }
	}
	return false;
}

void LuaNote_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("note",f2,17,0a,49));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo LuaNote_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Note */ ,(int)offsetof(LuaNote_obj,note),HX_("note",f2,17,0a,49)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo LuaNote_obj_sStaticStorageInfo[] = {
	{::hx::fsUnknown /*  cpp::Reference<lua_State> */ ,(void *) &LuaNote_obj::state,HX_("state",11,76,0b,84)},
	{::hx::fsObject /* ::cpp::Function< int  ( lua_State*) > */ ,(void *) &LuaNote_obj::tweenPosC,HX_("tweenPosC",3a,6c,23,81)},
	{::hx::fsObject /* ::cpp::Function< int  ( lua_State*) > */ ,(void *) &LuaNote_obj::tweenAngleC,HX_("tweenAngleC",db,55,72,07)},
	{::hx::fsObject /* ::cpp::Function< int  ( lua_State*) > */ ,(void *) &LuaNote_obj::tweenAlphaC,HX_("tweenAlphaC",f0,0b,95,e6)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String LuaNote_obj_sMemberFields[] = {
	HX_("note",f2,17,0a,49),
	HX_("SetNumProperty",59,68,62,ea),
	HX_("Register",83,62,51,aa),
	::String(null()) };

static void LuaNote_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LuaNote_obj::state,"state");
	HX_MARK_MEMBER_NAME(LuaNote_obj::tweenPosC,"tweenPosC");
	HX_MARK_MEMBER_NAME(LuaNote_obj::tweenAngleC,"tweenAngleC");
	HX_MARK_MEMBER_NAME(LuaNote_obj::tweenAlphaC,"tweenAlphaC");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LuaNote_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LuaNote_obj::state,"state");
	HX_VISIT_MEMBER_NAME(LuaNote_obj::tweenPosC,"tweenPosC");
	HX_VISIT_MEMBER_NAME(LuaNote_obj::tweenAngleC,"tweenAngleC");
	HX_VISIT_MEMBER_NAME(LuaNote_obj::tweenAlphaC,"tweenAlphaC");
};

#endif

::hx::Class LuaNote_obj::__mClass;

static ::String LuaNote_obj_sStaticFields[] = {
	HX_("state",11,76,0b,84),
	HX_("findNote",cb,24,9e,9b),
	::String(null())
};

void LuaNote_obj::__register()
{
	LuaNote_obj _hx_dummy;
	LuaNote_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("LuaNote",aa,01,e2,2d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LuaNote_obj::__GetStatic;
	__mClass->mSetStaticField = &LuaNote_obj::__SetStatic;
	__mClass->mMarkFunc = LuaNote_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(LuaNote_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LuaNote_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LuaNote_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LuaNote_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LuaNote_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LuaNote_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void LuaNote_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_449_boot)
HXDLIN( 449)		tweenPosC = ::cpp::Function< int ( lua_State*)>(::hx::AnyCast(&::LuaNote_obj::tweenPos ));
            	}
{
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_450_boot)
HXDLIN( 450)		tweenAngleC = ::cpp::Function< int ( lua_State*)>(::hx::AnyCast(&::LuaNote_obj::tweenAngle ));
            	}
{
            	HX_STACKFRAME(&_hx_pos_3f466ccfc5bbbb03_451_boot)
HXDLIN( 451)		tweenAlphaC = ::cpp::Function< int ( lua_State*)>(::hx::AnyCast(&::LuaNote_obj::tweenAlpha ));
            	}
}

